{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","board","bits","target_bits","selection","i","j","push","x","y","color","Boolean","flipped","Math","floor","random","greenHighlight","orangeHighlight","blueHighlight","registerClick","bind","getCurrentValue","selectGroup","handleChange","calculate","clearHighlights","enterSelectionMode","randomizeTiles","setAllCoins","this","setState","toString","padStart","setTimeout","newBoard","reduce","a","bit","group","filter","b","includes","unshift","getParity","length","bitsToFlip","pos","parseInt","join","target","console","log","forEach","e","id","value","onClick","className","rows","cols","maxLength","disabled","onChange","style","src","frameBorder","allow","allowFullScreen","title","map","backgroundColor","getBackgroundColor","outline","key","border","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38fdcb0a.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./App.css\"\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      board: [],\r\n      bits: [],\r\n      target_bits: [],\r\n      selection: false\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        this.state.board.push({x: j, y: i, color: Boolean((9*i + j + 1) % 2), flipped: Boolean(Math.floor(Math.random() * 2)), greenHighlight: false, orangeHighlight: false, blueHighlight: false,})\r\n      }\r\n    }\r\n\r\n\r\n    this.registerClick = this.registerClick.bind(this)\r\n    this.getCurrentValue = this.getCurrentValue.bind(this)\r\n    this.selectGroup = this.selectGroup.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.calculate = this.calculate.bind(this)\r\n    this.clearHighlights = this.clearHighlights.bind(this)\r\n    this.enterSelectionMode = this.enterSelectionMode.bind(this)\r\n    this.randomizeTiles = this.randomizeTiles.bind(this)\r\n    this.setAllCoins = this.setAllCoins.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentValue()\r\n  }\r\n\r\n  registerClick(x,y) {\r\n    if (this.state.selection) {\r\n      this.setState({selection: false, target_bits: (8*y + x).toString(2).padStart(6,\"0\")})\r\n      setTimeout(this.calculate, 50)\r\n    }\r\n    else {\r\n      let newBoard = this.state.board\r\n      newBoard[y*8 + x].flipped = !newBoard[y*8 + x].flipped\r\n      this.setState({board: newBoard})\r\n      this.getCurrentValue()\r\n    }\r\n  }\r\n\r\n  getParity(bits) {\r\n    let reducer = (a,bit) => {\r\n      return a + (bit.flipped ? 1 : 0)\r\n    }\r\n    return bits.reduce(reducer,0) % 2\r\n  }\r\n\r\n  selectGroup(group,board) { // count bits rtl\r\n    switch(group) {\r\n      case 0:\r\n        return board.filter(b => (((b.y*8 + b.x) % 2) === 1))\r\n      case 1:\r\n        return board.filter(b => ([2,3,6,7].includes((b.y*8 + b.x) % 8)))\r\n      case 2:\r\n        return board.filter(b => (((b.y*8 + b.x) % 8) >= 4))\r\n      case 3:\r\n        return board.filter(b => (((b.y + b.x*8) % 2) === 1))\r\n      case 4:\r\n        return board.filter(b => ([2,3,6,7].includes((b.y + b.x*8) % 8)))\r\n      case 5:\r\n        return board.filter(b => (((b.y + b.x*8) % 8) >= 4))\r\n      default:\r\n        return []\r\n    }\r\n  }\r\n\r\n  getCurrentValue() {\r\n    let bits = []\r\n    for (let i = 0; i < 6; i++) {\r\n      bits.unshift(this.getParity(this.selectGroup(i, this.state.board)))\r\n    }\r\n\r\n    this.setState({bits})\r\n    setTimeout(this.calculate, 25)\r\n  }\r\n\r\n  calculate() {\r\n    if (this.state.target_bits.length !== 6) {\r\n      return\r\n    }\r\n    this.clearHighlights()\r\n\r\n    let bitsToFlip = []\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      if (this.state.bits[i].toString() === this.state.target_bits[i]) {\r\n        bitsToFlip.push(0)\r\n      } else {\r\n        bitsToFlip.push(1)\r\n      }\r\n    }\r\n\r\n    let pos = parseInt(bitsToFlip.join(\"\"),2)\r\n    let target = parseInt(this.state.target_bits,2)\r\n\r\n    let board = this.state.board\r\n\r\n    console.log(pos)\r\n    console.log(target)\r\n\r\n    board[pos].greenHighlight = true;\r\n    board[target].blueHighlight = true    \r\n\r\n    this.setState({board})\r\n  }\r\n\r\n  clearHighlights() {\r\n    let board = this.state.board\r\n    board.forEach(b => b.greenHighlight = false)\r\n    board.forEach(b => b.orangeHighlight = false)\r\n    board.forEach(b => b.blueHighlight = false)\r\n    this.setState(board)\r\n  }\r\n\r\n  enterSelectionMode() {\r\n    this.setState({selection: true})\r\n  }\r\n\r\n  setAllCoins() {\r\n    let board = this.state.board\r\n    for (let i = 0; i < 64; i++) {\r\n      board[i].flipped = 0\r\n    }\r\n    this.setState({board})\r\n    setTimeout(this.getCurrentValue, 50)\r\n  }\r\n\r\n  randomizeTiles() {\r\n    let board = this.state.board\r\n    for (let i = 0; i < 64; i++) {\r\n      board[i].flipped = Math.floor(2 * Math.random())\r\n    }\r\n    this.setState({board})\r\n    setTimeout(this.getCurrentValue, 50)\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({[e.target.id]: e.target.value})\r\n    setTimeout(this.getCurrentValue, 50)\r\n  }\r\n  \r\n  getBackgroundColor(b) {\r\n    if (b.blueHighlight) {\r\n      return \"#5555ff\"\r\n    } else if (b.color) {\r\n      return \"#555555\"\r\n    } else {\r\n      return \"#333333\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<div id=\"app\">\r\n      <div id=\"sidebar\">\r\n        <h2>3Blue1Brown Chessboard Puzzle</h2>\r\n        <hr />\r\n        <br />\r\n        <button onClick={this.randomizeTiles}>Randomize Coins</button>\r\n        <br />\r\n        <button onClick={() => {this.setAllCoins()}}>Set All Coins to Heads</button>\r\n        <h3>Current Encoded Position</h3>\r\n        <div className=\"textarea-container\">\r\n          <textarea rows={1} cols={6} maxLength={6} disabled={true} value={this.state.bits.join(\"\")} id=\"current-position\">\r\n          </textarea>\r\n        </div>\r\n        <hr />\r\n        <br />\r\n        <h3>Position to Encode</h3>\r\n        <button onClick={this.enterSelectionMode} id=\"selection-mode-button\">Select Tile</button>\r\n        <div className=\"textarea-container\">\r\n          <textarea id=\"target_bits\" rows={1} cols={6} maxLength={6} onChange={this.handleChange} value={this.state.target_bits}></textarea>\r\n        </div>\r\n        <hr />\r\n        <h3>Explanation</h3>\r\n        <p>The tile in <span style={{color: \"orange\"}}>orange</span> is the tile that is currently encoded by the state of the board. When you input a position to encode, either by typing in the binary or by clicking the button then a tile, that position will show in <span style={{color: \"#5555ff\"}}>blue</span> a coin will show up in <span style={{color: \"green\"}}>green.</span> When you flip that coin, the state of the board will change to the requested position.</p>\r\n        <hr />\r\n        <h3>Videos</h3>\r\n        <iframe src=\"https://www.youtube.com/embed/as7Gkm7Y7h4\" frameBorder=\"0\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen title=\"standupmaths\"></iframe>\r\n        <iframe src=\"https://www.youtube.com/embed/wTJI_WuZSwE\" frameBorder=\"0\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen title=\"3b1b\"></iframe>\r\n      </div>\r\n      <div id=\"board-container\">\r\n        <div id=\"board\">\r\n          {this.state.board.map(b => \r\n            <div className=\"tile\"\r\n              onClick={() => this.registerClick(b.x,b.y)}\r\n              style={{backgroundColor: this.getBackgroundColor(b), outline: ((8*b.y + b.x) === parseInt(this.state.bits.join(\"\"), 2)) && \"3px solid orange\"}}\r\n              key={8*b.y + b.x}\r\n              >\r\n              <div className=\"coin\"\r\n                style={{backgroundColor: b.flipped ? \"#222222\" : \"#999999\", border: b.greenHighlight && \"3px dashed green\", }}\r\n              >\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}